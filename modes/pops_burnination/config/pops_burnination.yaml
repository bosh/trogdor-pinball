#config_version=6

mode:
  start_events: qualify_pops_burnination
  stop_events: succeed_pops_burnination, fail_pops_burnination
  priority: 154

timers:
  #Mode time limit timer
  burnination_countdown:
    start_value: 20 #Short for now for ease of testing
    end_value: 0
    direction: down
    start_running: true
    restart_on_complete: false
    control_events:
      - action: stop
        event: burnination_countdown_stop

  # Three separate burndown timers completing every three seconds
  pop_left_burndown:
    start_value: 0
    end_value: 3
    direction: up
    start_running: true
    restart_on_complete: true
    control_events:
      - action: start
        event: pop_left_burndown_start
      - action: stop
        event: pop_left_burndown_stop
      - action: reset
        event: pop_left_burndown_reset

  pop_right_burndown:
    start_value: 0
    end_value: 3
    direction: up
    start_running: true
    restart_on_complete: true
    control_events:
      - action: start
        event: pop_right_burndown_start
      - action: stop
        event: pop_right_burndown_stop
      - action: reset
        event: pop_right_burndown_reset

  pop_center_burndown:
    start_value: 0
    end_value: 3
    direction: up
    start_running: true
    restart_on_complete: true
    control_events:
      - action: start
        event: pop_center_burndown_start
      - action: stop
        event: pop_center_burndown_stop
      - action: reset
        event: pop_center_burndown_reset

variable_player:
  mode_pops_burnination_started:
    pop_left_fire_level:
      int: 0
      action: set
    pop_right_fire_level:
      int: 0
      action: set
    pop_center_fire_level:
      int: 0
      action: set

  # Increment fire level by three on bumper hit
  s_pop_left_active:
    score: 1000 * current_player.playfield_multiplier
    pop_left_fire_level:
      int: 3
      action: add

  s_pop_right_active:
    score: 1000 * current_player.playfield_multiplier
    pop_right_fire_level:
      int: 3
      action: add

  s_pop_center_active:
    score: 1000 * current_player.playfield_multiplier
    pop_center_fire_level:
      int: 3
      action: add

  timer_pop_left_burndown_complete{current_player.pop_left_fire_level > 0}:
    pop_left_fire_level:
      int: -1
      action: add
  timer_pop_right_burndown_complete{current_player.pop_right_fire_level > 0}:
    pop_right_fire_level:
      int: -1
      action: add
  timer_pop_center_burndown_complete{current_player.pop_center_fire_level > 0}:
    pop_center_fire_level:
      int: -1
      action: add


event_player:
  timer_burnination_countdown_complete:
    - burnination_failed

  # Reset the timer when pop is hit
  s_pop_left_active:
    - pop_left_burndown_reset
  s_pop_right_active:
    - pop_right_burndown_reset
  s_pop_center_active:
    - pop_center_burndown_reset

  # Stop timers on mode exit (TODO try to do this before turning off shows)
  mode_pops_burnination_will_stop:
    - pop_left_burndown_stop
    - pop_right_burndown_stop
    - pop_center_burndown_stop

  # Immediately start shows on mode start
  mode_pops_burnination_started:
    - refresh_pop_left_show
    - refresh_pop_right_show
    - refresh_pop_center_show

  # When player variables change, refresh related show and test mode completion
  player_pop_left_fire_level:
    - refresh_pop_left_show
    - check_burnination_complete
  player_pop_right_fire_level:
    - refresh_pop_right_show
    - check_burnination_complete
  player_pop_center_fire_level:
    - refresh_pop_center_show
    - check_burnination_complete

  check_burnination_complete{current_player.pop_left_fire_level > 25 and current_player.pop_right_fire_level > 25 and current_player.pop_center_fire_level > 25}:
    - burnination_qualified

state_machines:
  burnination_state:
    persist_state: true
    states:
      start:
        label: incomplete
      done:
        label: complete
        events_when_started: burnination_countdown_stop, increment_playfield_multiplier, succeed_pops_burnination
      failed:
        label: failed
        events_when_started: burnination_countdown_stop, fail_pops_burnination
    transitions:
      - source: start
        target: done
        events: burnination_qualified
      - source: start
        target: failed
        events: burnination_failed

show_player:
  # Turn off pop shows
  mode_pops_burnination_will_stop:
    pop_left_show: stop
    pop_right_show: stop
    pop_center_show: stop

  stop_pop_left_show:
    pop_left_show: stop
  stop_pop_right_show:
    pop_right_show: stop
  stop_pop_center_show:
    pop_center_show: stop

  refresh_pop_left_show{current_player.pop_left_fire_level <= 0}:
    pop_left_show: stop
  refresh_pop_right_show{current_player.pop_right_fire_level <= 0}:
    pop_right_show: stop
  refresh_pop_center_show{current_player.pop_center_fire_level <= 0}:
    pop_center_show: stop

  # Low level
  refresh_pop_left_show{current_player.pop_left_fire_level > 0 and current_player.pop_left_fire_level < 8}:
    fire_low_level_show:
      key: pop_left_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_a

  refresh_pop_right_show{current_player.pop_right_fire_level > 0 and current_player.pop_right_fire_level < 8}:
    fire_low_level_show:
      key: pop_right_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_b

  refresh_pop_center_show{current_player.pop_center_fire_level > 0 and current_player.pop_center_fire_level < 8}:
    fire_low_level_show:
      key: pop_center_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_c

  # Medium level
  refresh_pop_left_show{current_player.pop_left_fire_level >= 8 and current_player.pop_left_fire_level < 15}:
    fire_medium_level_show:
      key: pop_left_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_a

  refresh_pop_right_show{current_player.pop_right_fire_level >= 8 and current_player.pop_right_fire_level < 15}:
    fire_medium_level_show:
      key: pop_right_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_b

  refresh_pop_center_show{current_player.pop_center_fire_level >= 8 and current_player.pop_center_fire_level < 15}:
    fire_medium_level_show:
      key: pop_center_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_c

  # High level
  refresh_pop_left_show{current_player.pop_left_fire_level >= 15 and current_player.pop_left_fire_level < 25}:
    fire_high_level_show:
      key: pop_left_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_a

  refresh_pop_right_show{current_player.pop_right_fire_level >= 15 and current_player.pop_right_fire_level < 25}:
    fire_high_level_show:
      key: pop_right_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_b

  refresh_pop_center_show{current_player.pop_center_fire_level >= 15 and current_player.pop_center_fire_level < 25}:
    fire_high_level_show:
      key: pop_center_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_c

  # Extreme level
  refresh_pop_left_show{current_player.pop_left_fire_level >= 25}:
    fire_extreme_level_show:
      key: pop_left_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_a

  refresh_pop_right_show{current_player.pop_right_fire_level >= 25}:
    fire_extreme_level_show:
      key: pop_right_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_b

  refresh_pop_center_show{current_player.pop_center_fire_level >= 25}:
    fire_extreme_level_show:
      key: pop_center_show
      action: play
      sync_ms: 500
      show_tokens:
        light_prefix: l_pop_ring_c
